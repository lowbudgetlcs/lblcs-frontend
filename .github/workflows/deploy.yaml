name: Deploy on Prod

on:
  push:
    branches: ["main"]

jobs:
  env:
    uses: ./.github/workflows/build-env.yaml

  build:
    needs: env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download env artifact
        uses: actions/download-artifact@v4
        with:
          name: env

      - name: Import env
        shell: bash
        run: |
          while read env; do
            echo $env >> $GITHUB_ENV
          done < .env.art

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push client Docker image
        env:
          VITE_PLAYERS_URL: ${{ secrets.VITE_PLAYERS_URL }}
          VITE_TEAMS_URL: ${{ secrets.VITE_TEAMS_URL }}
          VITE_DIVISIONS_URL: ${{ secrets.VITE_DIVISIONS_URL }}
        run: |
          cd ./client
          docker build \
            --build-arg VITE_PLAYERS_URL=${{ env.VITE_PLAYERS_URL }} \
            --build-arg VITE_TEAMS_URL=${{ env.VITE_TEAMS_URL }} \
            --build-arg VITE_DIVISIONS_URL=${{ env.VITE_DIVISIONS_URL }} \
            -t lblcs/${{ env.APP }}:latest-client \
            -t lblcs/${{ env.APP }}:${{ env.VERSION }}-client .
          docker push lblcs/${{ env.APP }}:latest-client
          docker push lblcs/${{ env.APP }}:${{ env.VERSION }}-client

      - name: Build and push server Docker image
        env:
          PRODUCTION: ${{ secrets.PRODUCTION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          cd ../server
          docker build \
            --build-arg PRODUCTION=${{ env.PRODUCTION }} \
            --build-arg DATABASE_URL=${{ env.DATABASE_URL }} \
            -t lblcs/${{ env.APP }}:latest-server \
            -t lblcs/${{ env.APP }}:${{ env.VERSION }}-server .
          docker push lblcs/${{ env.APP }}:latest-server
          docker push lblcs/${{ env.APP }}:${{ env.VERSION }}-server

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download env artifact
        uses: actions/download-artifact@v4
        with:
          name: env

      - name: Import env
        shell: bash
        run: |
          while read env; do
            echo $env >> $GITHUB_ENV
          done < .env.art

      - name: Execute docker compose on prod server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd docker/lblcs/${{ env.APP }}
            echo CLIENT_ID="${{ secrets.CLIENT_ID }}" > .env
            echo CLIENT_SECRET="${{ secrets.CLIENT_SECRET }}" >> .env
            echo VITE_PLAYERS_URL="${{ secrets.VITE_PLAYERS_URL }}" >> .env
            echo VITE_TEAMS_URL="${{ secrets.VITE_TEAMS_URL }}" >> .env
            echo VITE_DIVISIONS_URL="${{ secrets.VITE_DIVISIONS_URL }}" >> .env
            echo PRODUCTION="${{ secrets.PRODUCTION }}" >> .env
            echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> .env
            docker-compose down
            docker-compose pull
            docker-compose up -d